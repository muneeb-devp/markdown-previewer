{"version":3,"sources":["components/editor/editor.component.jsx","defaultMarkdown.md","App.js","index.js"],"names":["Editor","onTextChange","defaultText","useState","text","setText","useEffect","className","htmlFor","name","id","rows","onChange","e","target","value","textChanged","App","fetch","defaultMarkdown","then","resp","marked","setOptions","renderer","Renderer","highlight","code","lang","hljs","require","language","getLanguage","langPrefix","pedantic","gfm","breaks","sanitize","smartLists","smartypants","xhtml","Container","fluid","Card","Header","Body","Row","Col","md","dangerouslySetInnerHTML","__html","parse","createMarkup","ReactDOM","render","document","querySelector"],"mappings":"+MAqBeA,MAnBf,YAA8C,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OAJAC,qBAAU,WACRL,EAAaG,KACZ,CAACA,IAGF,qBAAKG,UAAU,SAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAOC,QAAQ,SAASD,UAAU,WAAlC,oBACA,0BAAUA,UAAU,eAAeE,KAAK,SAASC,GAAG,SAASC,KAAK,KAAKC,SAAU,SAACC,GAAD,OAVnE,SAACA,GAAD,OAAQR,EAAQQ,EAAEC,OAAOC,OAUiDC,CAAYH,IAAIE,MAAOb,U,OCfxG,MAA0B,2CCwD1Be,MAlDf,WACE,MAAwBd,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,OAvBAC,qBAAU,WACRY,MAAMC,GAAiBC,MAAK,SAAAC,GAAI,OAAIA,EAAKjB,UAAQgB,MAAK,SAAAhB,GAAI,OAAIC,EAAQD,QACrE,IAEHkB,SAAOC,WAAW,CAChBC,SAAU,IAAIF,SAAOG,SACrBC,UAAW,SAAUC,EAAMC,GACzB,IAAMC,EAAOC,EAAQ,IACfC,EAAWF,EAAKG,YAAYJ,GAAQA,EAAO,YACjD,OAAOC,EAAKH,UAAUC,EAAM,CAAEI,aAAYhB,OAE5CkB,WAAY,iBACZC,UAAU,EACVC,KAAK,EACLC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,aAAa,EACbC,OAAO,IAMP,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACnC,UAAU,OAA3B,SACE,eAACoC,EAAA,EAAD,CAAMpC,UAAU,SAAhB,UACE,cAACoC,EAAA,EAAKC,OAAN,CAAarC,UAAU,8BAAvB,SACE,oBAAIA,UAAU,gBAAd,oCAEF,cAACoC,EAAA,EAAKE,KAAN,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAQ9C,aAlCA,SAACG,GAAD,OAAUC,EAAQD,IAkCSF,YAAaE,MAElD,cAAC2C,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,qBAAKtC,GAAG,UAAUuC,wBAd9B,SAAsB7C,GAAQ,MAAO,CAAE8C,OAAQ5B,SAAO6B,MAAM/C,IAcLgD,CAAahD,GAAOG,UAAU,qB,OCzCvF8C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.d23c07cd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Editor({onTextChange, defaultText}) {\r\n  const [text, setText] = useState('')\r\n\r\n  const textChanged = (e) =>  setText(e.target.value)\r\n  \r\n  useEffect(() => {\r\n    onTextChange(text)\r\n  }, [text])\r\n\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"editor\" className=\"lead p-1\">Editor</label>\r\n        <textarea className=\"form-control\" name=\"editor\" id=\"editor\" rows=\"10\" onChange={(e) => textChanged(e)} value={defaultText}></textarea>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editor\r\n","export default __webpack_public_path__ + \"static/media/defaultMarkdown.e5e8aebf.md\";","import React, { useState, useEffect } from 'react'\r\nimport { Card, Col, Container, Row } from 'react-bootstrap'\r\nimport Editor from './components/editor/editor.component'\r\nimport { marked } from 'marked'\r\nimport defaultMarkdown from './defaultMarkdown.md'\r\n\r\nfunction App() {\r\n  const [text, setText] = useState('')\r\n\r\n  const textChanged = (text) => setText(text)\r\n\r\n  useEffect(() => {\r\n    fetch(defaultMarkdown).then(resp => resp.text()).then(text => setText(text))\r\n  }, [])\r\n\r\n  marked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    highlight: function (code, lang) {\r\n      const hljs = require('highlight.js');\r\n      const language = hljs.getLanguage(lang) ? lang : 'plaintext';\r\n      return hljs.highlight(code, { language }).value;\r\n    },\r\n    langPrefix: 'hljs language-', // highlight.js css expects a top-level 'hljs' class.\r\n    pedantic: false,\r\n    gfm: true,\r\n    breaks: true,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n    xhtml: false,\r\n  });\r\n\r\n  function createMarkup(text) { return { __html: marked.parse(text) }; };\r\n\r\n  return (\r\n    <Container fluid className=\"my-2\">\r\n      <Card className=\"w-100 \">\r\n        <Card.Header className=\"p-0 bg-secondary text-white\">\r\n          <h1 className=\"display-6 m-2\"> Markdown Previewer </h1>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col >\r\n              <Editor onTextChange={textChanged} defaultText={text} />\r\n            </Col>\r\n            <Col md='8' >\r\n              <div id=\"preview\" dangerouslySetInnerHTML={createMarkup(text)} className='p-4'>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector(\"#main\")\r\n)"],"sourceRoot":""}